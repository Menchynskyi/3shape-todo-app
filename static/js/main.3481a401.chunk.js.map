{"version":3,"sources":["components/NewItem/NewItemStyled.js","components/NewItem/NewItem.jsx","components/ActiveItem/ActiveItemStyled.js","components/ActiveItem/ActiveItem.jsx","components/TodoList/TodoListStyled.js","components/TodoList/TodoList.jsx","AppStyled.js","App.js","index.js"],"names":["ItemContainer","styled","div","props","theme","primary","fontFamily","disabled","grey","AddForm","form","StyledFieldName","Field","fontSize","StyledFieldDescription","CancelButton","button","white","SaveButton","validateField","value","length","undefined","NewItem","onAddFormSubmit","initialValues","name","description","onSubmit","values","actions","resetForm","handleSubmit","dirty","handleReset","errors","validate","placeholder","component","rows","type","onClick","label","StyledEditName","DeleteButton","secondary","ActiveItem","deleteTask","changeTask","active","useContext","TodoContext","id","TasksContainer","Task","TodoList","onItemClick","todoList","map","key","Container","black","AppContainer","StyledButton","createContext","initialState","showNew","ReactDOM","render","useState","state","setState","setId","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","context","Provider","taskId","newTodoList","filter","i","task","newTasks","t","newTodo","createTodoListItem","activeItem","find","document","getElementById"],"mappings":"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","file":"static/js/main.3481a401.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Field } from 'formik';\r\n\r\nexport const ItemContainer = styled.div`\r\n    border: 2px solid ${props => props.theme.primary};\r\n    border-radius: 5px;\r\n    margin-bottom: 1.5rem;\r\n\r\n    & hr {\r\n        width: 100%;\r\n        border-top: 2px solid ${props => props.theme.primary};\r\n        margin: 0;\r\n    };\r\n\r\n    & button{\r\n        font-family: ${props => props.theme.fontFamily};\r\n        position: relative;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n        };\r\n\r\n        &:focus {\r\n            outline: none;\r\n        };\r\n\r\n        &:active {\r\n            transform: scale(0.98);\r\n        };\r\n\r\n        &[disabled] {\r\n            cursor: not-allowed;\r\n            background-color: ${props => props.theme.disabled};\r\n            color: ${props => props.theme.grey};\r\n\r\n             &:hover:after {\r\n                position: absolute;\r\n                top: -55px; \r\n                left: -5px;\r\n                width: 100%;\r\n                padding: 5px;\r\n                content: attr(label);\r\n                border: 1px solid ${props => props.theme.primary};\r\n                border-radius: 3px;\r\n                color: ${props => props.theme.primary};\r\n                font-weight: bold;\r\n             };\r\n        };\r\n    };\r\n`;\r\n\r\nexport const AddForm = styled.form`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const StyledFieldName = styled(Field)`\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    width: 100%;\r\n    font-family: ${props => props.theme.fontFamily};\r\n    font-size: ${props => props.theme.fontSize};\r\n    padding: 15px 20px;\r\n`;\r\n\r\nexport const StyledFieldDescription = styled(Field)`\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none;    \r\n    padding: 20px;\r\n    font-family: ${props => props.theme.fontFamily};\r\n    font-size: ${props => props.theme.fontSize};\r\n    resize: none;\r\n    width: 50%;\r\n`;\r\n\r\nexport const CancelButton = styled.button`\r\n    width: 15%;\r\n    height: 34px;\r\n    margin-left: auto;\r\n    background: ${props => props.theme.white};\r\n    color: ${props => props.theme.primary};\r\n    border: 1px solid ${props => props.theme.primary};\r\n    margin-bottom: 1rem;\r\n    font-size: ${props => props.theme.fontSize};\r\n`;\r\n\r\nexport const SaveButton = styled.button`\r\n    width: 15%;\r\n    height: 34px;\r\n    margin-right: 1.5rem;\r\n    margin-left: 2rem;\r\n    margin-bottom: 1rem;\r\n    background: ${props => props.theme.primary};\r\n    color: ${props => props.theme.white};\r\n    font-size: ${props => props.theme.fontSize};\r\n    border: none;\r\n    border-radius: 3px;\r\n`;","import React from 'react';\r\nimport { \r\n    ItemContainer, \r\n    StyledFieldName, \r\n    StyledFieldDescription, \r\n    AddForm, \r\n    CancelButton, \r\n    SaveButton } from './NewItemStyled';\r\nimport { Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const validateField = (value) => {\r\n    const error = !value ? \r\n        'Enter task name' : \r\n        value.length > 15 ? \r\n        'Task name is too long' : \r\n        undefined;\r\n\r\n    return error;\r\n};\r\n\r\nexport const NewItem = ({ onAddFormSubmit }) => (\r\n    <ItemContainer>\r\n        <Formik\r\n            initialValues={{\r\n                name: '',\r\n                description: '',\r\n            }}\r\n            onSubmit={(values, actions) => {\r\n                onAddFormSubmit(values.name, values.description);\r\n                actions.resetForm();\r\n            }}\r\n        >\r\n                {\r\n                    ({ handleSubmit, values, dirty, handleReset, errors }) => {\r\n                        return (\r\n                            <AddForm onSubmit={handleSubmit}>\r\n                                <StyledFieldName \r\n                                    validate={validateField}\r\n                                    placeholder=\"Type task name...\" \r\n                                    name=\"name\" \r\n                                    value={values.name} \r\n                                />\r\n                                <hr />\r\n                                <StyledFieldDescription \r\n                                    placeholder=\"Type task description...\" \r\n                                    name=\"description\" \r\n                                    value={values.description}\r\n                                    component=\"textarea\"\r\n                                    rows=\"5\" \r\n                                />\r\n                                <CancelButton\r\n                                    type=\"button\" \r\n                                    onClick={handleReset}\r\n                                >\r\n                                    CANCEL\r\n                                </CancelButton>\r\n                                <SaveButton \r\n                                    label={errors.name || `Enter task name`}\r\n                                    disabled={!dirty || errors.name}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    ADD\r\n                                </SaveButton>\r\n                            </AddForm>\r\n                        )\r\n                    }\r\n                }\r\n        </Formik>\r\n    </ItemContainer>\r\n);\r\n\r\nNewItem.propTypes = {\r\n    onAddFormSubmit: PropTypes.func.isRequired\r\n};","import styled from 'styled-components';\r\nimport { StyledFieldName } from '../NewItem/NewItemStyled';\r\n\r\nexport const StyledEditName = styled(StyledFieldName)`\r\n    width: 50%;\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n    margin: auto 1.5rem;\r\n    padding: 5px 20px;\r\n    background: ${props => props.theme.secondary};\r\n    color: ${props => props.theme.white};\r\n    font-size: 10px;\r\n    line-height: 12px;\r\n    border: none;\r\n    border-radius: 3px;\r\n`;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../../App';\r\nimport { \r\n    ItemContainer, \r\n    StyledFieldDescription,\r\n    AddForm,\r\n    CancelButton,\r\n    SaveButton } from '../NewItem/NewItemStyled';\r\nimport { StyledEditName, DeleteButton } from './ActiveItemStyled';\r\nimport { Formik } from 'formik';\r\nimport { validateField } from '../NewItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ActiveItem = ({ deleteTask, changeTask }) => {\r\n    const { active } = useContext(TodoContext);\r\n    \r\n    return (\r\n        <ItemContainer>\r\n            <Formik\r\n                initialValues={{\r\n                    name: active.name,\r\n                    description: active.description,\r\n                }}\r\n                onSubmit={(values) => {\r\n                    changeTask({\r\n                        ...active,\r\n                        name: values.name,\r\n                        description: values.description\r\n                    });\r\n                }}\r\n            >\r\n                    {\r\n                        ({ handleSubmit, values, errors, handleReset, dirty }) => (\r\n                            <AddForm onSubmit={handleSubmit}>\r\n                                <StyledEditName \r\n                                    validate={validateField}\r\n                                    placeholder=\"Type task name...\" \r\n                                    name=\"name\" \r\n                                    value={values.name} \r\n                                />\r\n                                <DeleteButton\r\n                                    type=\"button\"\r\n                                    onClick={() => deleteTask(active.id)}>\r\n                                    DELETE\r\n                                </DeleteButton>\r\n                                <hr />\r\n                                <StyledFieldDescription \r\n                                    placeholder=\"Type task description...\" \r\n                                    name=\"description\" \r\n                                    value={values.description}\r\n                                    component=\"textarea\"\r\n                                    rows=\"5\" \r\n                                />\r\n                                <CancelButton\r\n                                    type=\"button\"\r\n                                    onClick={handleReset}\r\n                                >\r\n                                    CANCEL\r\n                                </CancelButton>\r\n                                <SaveButton \r\n                                    label={errors.name}\r\n                                    disabled={errors.name}\r\n                                    type=\"submit\">\r\n                                    SAVE\r\n                                </SaveButton>\r\n                            </AddForm>\r\n                        )\r\n                    }\r\n            </Formik>\r\n        </ItemContainer>\r\n    );\r\n};\r\n\r\nActiveItem.propTypes = {\r\n    deleteTask: PropTypes.func.isRequired,\r\n    changeTask: PropTypes.func.isRequired\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const TasksContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Task = styled.div`\r\n    flex: 0 calc(30% + 3.5rem - 2px);\r\n    display: flex;\r\n    align-items: center;\r\n    border: 2px solid #D1004B;\r\n    border-radius: 3px;\r\n    height: 50px;\r\n    margin-top: 1.5rem;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    };\r\n    \r\n    &:active {\r\n        transform: scale(0.98);\r\n    };\r\n\r\n    & span {\r\n        padding-left: 20px;\r\n    };\r\n`;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../../App';\r\nimport { Task, TasksContainer } from './TodoListStyled';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoList = ({ onItemClick }) => {\r\n    const { todoList } = useContext(TodoContext);\r\n\r\n    const createTodoList = (arr) => {\r\n        return arr.map(({ id, name }) => (\r\n            <Task \r\n                key={id}\r\n                onClick={() => onItemClick(id)}\r\n            >\r\n                <span>{name}</span>\r\n            </Task>\r\n        ))\r\n    };\r\n    \r\n    return (\r\n        <TasksContainer>\r\n            { createTodoList(todoList) }\r\n        </TasksContainer>\r\n    );\r\n};\r\n\r\nTodoList.propTypes = {\r\n    onItemClick: PropTypes.func.isRequired\r\n};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\r\n    margin: 0;\r\n    color: ${props => props.theme.black};\r\n    font-size: ${props => props.theme.fontSize};\r\n    font-family: ${props => props.theme.fontFamily};\r\n`;\r\n\r\nexport const AppContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-content: center;\r\n    width: 600px;\r\n    margin-top: 5rem;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    width: calc(30% + 3.5rem + 2px);\r\n    height: 50px;\r\n    margin: 3rem 0 1.5rem auto;\r\n    font-size: ${props => props.theme.fontSize};\r\n    font-family: ${props => props.theme.fontFamily};\r\n    color: ${props => props.theme.white};\r\n    background: ${props => props.theme.primary};\r\n    border: 0;\r\n    border-radius: 3px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    };\r\n\r\n    &:focus {\r\n        outline: none;\r\n    };\r\n\r\n    &:active {\r\n        transform: scale(0.98);\r\n    };\r\n`;","import React, { createContext, useState, useEffect } from 'react';\nimport { NewItem } from './components/NewItem';\nimport { ActiveItem } from './components/ActiveItem';\nimport { TodoList } from './components/TodoList';\nimport { AppContainer, StyledButton, Container } from './AppStyled';\n\nexport const TodoContext = createContext();\n\nconst initialState = {\n    todoList: [\n        { id: 1, name: 'Task 1', description: 'Task 1 description' },\n        { id: 2, name: 'Task 2', description: 'Task 2 description' },\n        { id: 3, name: 'Task 3', description: 'Task 3 description' },\n        { id: 4, name: 'Task 4', description: 'Task 4 description' }\n    ],\n    active: null,\n    showNew: true\n};\n\nexport const App = () => {\n    const [state, setState] = useState(initialState);\n    const [id, setId] = useState(100);\n\n    const { todoList, active, showNew } = state;\n\n    useEffect(() => {\n        if (localStorage.getItem('todoList') !== null || localStorage.getItem('id') !== null) {\n            setState({\n                ...state,\n                todoList: JSON.parse(localStorage.getItem('todoList'))\n            });\n            setId(JSON.parse(localStorage.getItem('id')));\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('todoList', JSON.stringify(todoList));\n        localStorage.setItem('id', JSON.stringify(id));\n    }, [id, todoList]);\n\n    const createTodoListItem = (name, description) => {\n        setId(id + 1);\n\n        return {\n            id,\n            name,\n            description\n        };\n    };\n\n    const getById = (taskId) => todoList.find(i => i.id === taskId);\n\n    const deleteTask = (taskId) => {\n        const newTodoList = todoList.filter(i => i.id !== taskId);\n\n        setState({\n            ...state,\n            todoList: newTodoList,\n            active: null,\n            showNew: true\n        });\n    };\n\n    const changeTask = (task) => {\n        const newTasks = todoList.map(t => {\n            if (t.id === task.id) {\n                return task;\n            };\n\n            return t;\n        });\n\n        setState({\n            ...state,\n            todoList: newTasks,\n            active: task\n        });\n    };\n\n    const onShowNewTaskForm = () => {\n        setState({\n            ...state,\n            showNew: true,\n            active: null\n        });\n    };\n\n    const onItemClick = (id) => {\n        const activeItem = getById(id);\n\n        setState({\n            ...state,\n            showNew: false,\n            active: activeItem\n        });\n    };\n\n    const addTodoListItem = (name, description) => {\n        const newTodo = createTodoListItem(name, description);\n\n        setState({\n            ...state,\n            todoList: [...todoList, newTodo]\n        });\n    };\n\n    const context = {\n        todoList,\n        active\n    };\n\n    return (\n        <TodoContext.Provider value={context}>\n            <Container>\n                <AppContainer>\n\n                    {\n                        active &&\n                        <ActiveItem\n                            key={active.id}\n                            deleteTask={deleteTask}\n                            changeTask={changeTask}\n                        />\n                    }\n\n                    {\n                        showNew &&\n                        <NewItem\n                            onAddFormSubmit={addTodoListItem}\n                        />\n                    }\n\n                    <TodoList onItemClick={onItemClick} />\n\n                    <StyledButton\n                        onClick={onShowNewTaskForm}\n                    >\n                        ADD NEW TASK\n                </StyledButton>\n\n                </AppContainer>\n            </Container>\n        </TodoContext.Provider>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { ThemeProvider } from 'styled-components';\n// import { createGlobalStyle } from 'styled-components';\n\n// const GlobalStyle = createGlobalStyle``; \n/*\nGlobalStyle, for some reasons, doesn't work on production, \nso it was replaced to Container in AppStyled.\n*/\n\nconst theme = {\n    primary: '#D1004B',\n    secondary: '#E28417',\n    disabled: '#be1352',\n    grey: '#F5F5F5',\n    white: '#FFFFFF',\n    black: '#000000',\n    fontSize: '16px',\n    fontFamily: 'Roboto'\n};\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <App />\n        {/* <GlobalStyle /> */}\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}